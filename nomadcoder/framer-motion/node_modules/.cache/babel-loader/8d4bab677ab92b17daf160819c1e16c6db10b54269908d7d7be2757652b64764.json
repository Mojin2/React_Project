{"ast":null,"code":"var _jsxFileName = \"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/App.tsx\",\n  _s = $RefreshSig$();\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Router from \"./routes/Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\n// RESET.css //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing:border-box;\n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props => props.theme.bgColor};\n  color:${props => props.theme.textColor};\n}\na{\n  text-decoration:none;\n  color:inherit;\n}\n`;\n_c = GlobalStyle;\nconst ModeButton = styled.button`\n  margin-top: 50px;\n  border: none;\n  background-color: ${props => props.theme.bgColor};\n  color: ${props => props.theme.textColor};\n  &:hover {\n    font-size: large;\n  }\n`;\n_c2 = ModeButton;\nfunction App() {\n  _s();\n  const [themeMode, setThemeMode] = useState(\"black\");\n  const theme = themeMode === \"black\" ? darkTheme : lightTheme;\n  const toggleTheme = () => setThemeMode(themeMode === \"black\" ? \"light\" : \"black\");\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {\n      initialIsOpen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModeButton, {\n      onClick: toggleTheme,\n      children: \"mode change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n\n  ////////////////////STATE WITH TYPESCRIPT////////////////////////\n  // const [value, setValue] = useState(\"\");\n  // function onChange(event: React.FormEvent<HTMLInputElement>) {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setValue(value);\n  // }\n  // function onSubmit(event: React.FormEvent<HTMLFormElement>) {\n  //   event.preventDefault();\n  //   console.log(event);\n  //   setValue(\"\");\n  // }\n  // return (\n  //   <div>\n  //     <form onSubmit={onSubmit}>\n  //       <input\n  //         value={value}\n  //         type={\"text\"}\n  //         placeholder={\"username\"}\n  //         onChange={onChange}\n  //       />\n  //       <button>Login</button>\n  //     </form>\n  //   </div>\n  // );\n}\n_s(App, \"U3+opVvh4ejfu22QfdWW9v6Wz+4=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"ModeButton\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["styled","createGlobalStyle","ThemeProvider","React","useState","Router","ReactQueryDevtools","darkTheme","lightTheme","jsxDEV","_jsxDEV","GlobalStyle","props","theme","bgColor","textColor","_c","ModeButton","button","_c2","App","_s","themeMode","setThemeMode","toggleTheme","children","fileName","_jsxFileName","lineNumber","columnNumber","initialIsOpen","onClick","_c3","$RefreshReg$"],"sources":["/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/App.tsx"],"sourcesContent":["import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Router from \"./routes/Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\n// RESET.css //\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing:border-box;\n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n}\na{\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst ModeButton = styled.button`\n  margin-top: 50px;\n  border: none;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n  &:hover {\n    font-size: large;\n  }\n`;\n\nfunction App() {\n  const [themeMode, setThemeMode] = useState(\"black\");\n  const theme = themeMode === \"black\" ? darkTheme : lightTheme;\n\n  const toggleTheme = () =>\n    setThemeMode(themeMode === \"black\" ? \"light\" : \"black\");\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n      <ModeButton onClick={toggleTheme}>mode change</ModeButton>\n    </ThemeProvider>\n  );\n\n  ////////////////////STATE WITH TYPESCRIPT////////////////////////\n  // const [value, setValue] = useState(\"\");\n  // function onChange(event: React.FormEvent<HTMLInputElement>) {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setValue(value);\n  // }\n  // function onSubmit(event: React.FormEvent<HTMLFormElement>) {\n  //   event.preventDefault();\n  //   console.log(event);\n  //   setValue(\"\");\n  // }\n  // return (\n  //   <div>\n  //     <form onSubmit={onSubmit}>\n  //       <input\n  //         value={value}\n  //         type={\"text\"}\n  //         placeholder={\"username\"}\n  //         onChange={onChange}\n  //       />\n  //       <button>Login</button>\n  //     </form>\n  //   </div>\n  // );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,IAAIC,iBAAiB,EAAEC,aAAa,QAAQ,mBAAmB;AAC5E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,SAAS,EAAEC,UAAU,QAAQ,SAAS;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGV,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAsBW,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,OAAQ;AACpD,UAAWF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,SAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAzDIL,WAAW;AA0DjB,MAAMM,UAAU,GAAGjB,MAAM,CAACkB,MAAO;AACjC;AACA;AACA,sBAAuBN,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,OAAQ;AACrD,WAAYF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,SAAU;AAC5C;AACA;AACA;AACA,CAAC;AAACI,GAAA,GARIF,UAAU;AAUhB,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAMS,KAAK,GAAGS,SAAS,KAAK,OAAO,GAAGf,SAAS,GAAGC,UAAU;EAE5D,MAAMgB,WAAW,GAAGA,CAAA,KAClBD,YAAY,CAACD,SAAS,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;EACzD,oBACEZ,OAAA,CAACR,aAAa;IAACW,KAAK,EAAEA,KAAM;IAAAY,QAAA,gBAC1Bf,OAAA,CAACC,WAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfnB,OAAA,CAACL,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACJ,kBAAkB;MAACwB,aAAa,EAAE;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CnB,OAAA,CAACO,UAAU;MAACc,OAAO,EAAEP,WAAY;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;;EAGlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACR,EAAA,CAzCQD,GAAG;AAAAY,GAAA,GAAHZ,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}