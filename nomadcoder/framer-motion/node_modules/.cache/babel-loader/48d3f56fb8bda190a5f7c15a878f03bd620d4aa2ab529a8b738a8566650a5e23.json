{"ast":null,"code":"var _jsxFileName = \"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coin.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.accentColor};\n`;\n_c3 = Title;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c4 = Loader;\nfunction Coin() {\n  _s();\n  const {\n    coinId\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  //typescript에게 useParams가 coinId를 포함하는 obj를 return할것을 정의\n  const {\n    state\n  } = useLocation();\n  const [info, setInfo] = useState();\n  const [priceInfo, setPriceInfo] = useState();\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`);\n      const infoData = await response.json();\n      const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\n      setInfo(infoData);\n      setPriceInfo(priceData);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: (state === null || state === void 0 ? void 0 : state.name) || \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Coin, \"mxLu+fht5iSurES17ZmeBOyIsBs=\", false, function () {\n  return [useParams, useLocation];\n});\n_c5 = Coin;\nexport default Coin;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Loader\");\n$RefreshReg$(_c5, \"Coin\");","map":{"version":3,"names":["useEffect","useState","useLocation","useParams","styled","jsxDEV","_jsxDEV","Container","div","_c","Header","header","_c2","Title","h1","props","theme","accentColor","_c3","Loader","span","_c4","Coin","_s","coinId","loading","setLoading","state","info","setInfo","priceInfo","setPriceInfo","response","fetch","infoData","json","priceData","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coin.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\ninterface Params {\n  coinId: string;\n}\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin() {\n  const { coinId } = useParams<Params>();\n  const [loading, setLoading] = useState(true);\n  //typescript에게 useParams가 coinId를 포함하는 obj를 return할것을 정의\n  const { state } = useLocation<RouteState>();\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        `https://api.coinpaprika.com/v1/coins/${coinId}`\n      );\n      const infoData = await response.json();\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      setInfo(infoData);\n      setPriceInfo(priceData);\n    })();\n  }, []);\n  return (\n    <Container>\n      <Header>\n        <Title>{state?.name || \"Loading...\"}</Title>\n      </Header>\n      {loading ? <Loader>Loading...</Loader> : null}\n    </Container>\n  );\n}\n\nexport default Coin;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAKf,MAAMG,MAAM,GAAGN,MAAM,CAACO,MAAO;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,MAAM;AAOZ,MAAMG,KAAK,GAAGT,MAAM,CAACU,EAAG;AACxB;AACA,WAAYC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,WAAY;AAC9C,CAAC;AAACC,GAAA,GAHIL,KAAK;AAKX,MAAMM,MAAM,GAAGf,MAAM,CAACgB,IAAK;AAC3B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,MAAM;AA6DZ,SAASG,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAO,CAAC,GAAGrB,SAAS,CAAS,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,MAAM;IAAE0B;EAAM,CAAC,GAAGzB,WAAW,CAAa,CAAC;EAC3C,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAW,CAAC;EAC5C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAY,CAAC;EACvDD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMgC,QAAQ,GAAG,MAAMC,KAAK,CACzB,wCAAuCT,MAAO,EACjD,CAAC;MACD,MAAMU,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtC,MAAMC,SAAS,GAAG,MAAM,CACtB,MAAMH,KAAK,CAAE,0CAAyCT,MAAO,EAAC,CAAC,EAC/DW,IAAI,CAAC,CAAC;MACRN,OAAO,CAACK,QAAQ,CAAC;MACjBH,YAAY,CAACK,SAAS,CAAC;IACzB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACE9B,OAAA,CAACC,SAAS;IAAA8B,QAAA,gBACR/B,OAAA,CAACI,MAAM;MAAA2B,QAAA,eACL/B,OAAA,CAACO,KAAK;QAAAwB,QAAA,EAAE,CAAAV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,IAAI,KAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EACRjB,OAAO,gBAAGnB,OAAA,CAACa,MAAM;MAAAkB,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEhB;AAACnB,EAAA,CA5BQD,IAAI;EAAA,QACQnB,SAAS,EAGVD,WAAW;AAAA;AAAAyC,GAAA,GAJtBrB,IAAI;AA8Bb,eAAeA,IAAI;AAAC,IAAAb,EAAA,EAAAG,GAAA,EAAAM,GAAA,EAAAG,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}