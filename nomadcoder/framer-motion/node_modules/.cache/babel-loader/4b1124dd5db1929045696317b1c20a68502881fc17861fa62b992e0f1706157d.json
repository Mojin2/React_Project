{"ast":null,"code":"import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import ApexCharts from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";function Chart(_ref){var _data$map,_data$map2;var coinId=_ref.coinId;var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);}// { refetchInterval: 10000 }\n),isLoading=_useQuery.isLoading,data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading chart...\":/*#__PURE__*/_jsx(ApexCharts,{type:\"candlestick\",series:[{name:\"Price\",data:(_data$map=data===null||data===void 0?void 0:data.map(function(price){return{x:price.time_close,y:[price.open,price.high,price.low,price.close]};}))!==null&&_data$map!==void 0?_data$map:[]}],options:{chart:{height:500,width:500,toolbar:{show:false},background:\"transparent\"},grid:{show:false},stroke:{curve:\"smooth\",width:5},yaxis:{show:false},xaxis:{axisBorder:{show:false},labels:{show:false},axisTicks:{show:false},type:\"datetime\",categories:(_data$map2=data===null||data===void 0?void 0:data.map(function(price){return new Date(Number(price.time_close)*1000).toISOString();}))!==null&&_data$map2!==void 0?_data$map2:[]},// fill: {\n//   type: \"gradient\",\n//   gradient: { gradientToColors: [\"blue\"],stops:[0,100] },\n// },\n// colors: [\"red\"],\ntooltip:{y:{formatter:function formatter(value){return\"$ \".concat(value.toFixed(3));}}}}})});}export default Chart;","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexCharts","jsx","_jsx","Chart","_ref","_data$map","_data$map2","coinId","_useQuery","isLoading","data","children","type","series","name","map","price","x","time_close","y","open","high","low","close","options","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","labels","axisTicks","categories","Date","Number","toISOString","tooltip","formatter","value","concat","toFixed"],"sources":["/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexCharts from \"react-apexcharts\";\ninterface CharProps {\n  coinId: string;\n}\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\nfunction Chart({ coinId }: CharProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n    // { refetchInterval: 10000 }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexCharts\n          type={\"candlestick\"}\n          series={[\n            {\n              name: \"Price\",\n              data:\n                data?.map((price) => ({\n                  x: price.time_close,\n                  y: [price.open, price.high, price.low, price.close],\n                })) ?? [],\n            },\n          ]}\n          options={{\n            chart: {\n              height: 500,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 5,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              labels: { show: false },\n              axisTicks: { show: false },\n              type: \"datetime\",\n              categories:\n                data?.map((price) =>\n                  new Date(Number(price.time_close) * 1000).toISOString()\n                ) ?? [],\n            },\n            // fill: {\n            //   type: \"gradient\",\n            //   gradient: { gradientToColors: [\"blue\"],stops:[0,100] },\n            // },\n            // colors: [\"red\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$ ${value.toFixed(3)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,OAASC,gBAAgB,KAAQ,QAAQ,CACzC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAc1C,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAwB,KAAAC,SAAA,CAAAC,UAAA,IAArB,CAAAC,MAAM,CAAAH,IAAA,CAANG,MAAM,CACrB,IAAAC,SAAA,CAA4BV,QAAQ,CAClC,CAAC,OAAO,CAAES,MAAM,CAAC,CACjB,iBAAM,CAAAR,gBAAgB,CAACQ,MAAM,CAAC,EAC9B;AACF,CAAC,CAJOE,SAAS,CAAAD,SAAA,CAATC,SAAS,CAAEC,IAAI,CAAAF,SAAA,CAAJE,IAAI,CAKvB,mBACER,IAAA,QAAAS,QAAA,CACGF,SAAS,CACR,kBAAkB,cAElBP,IAAA,CAACF,UAAU,EACTY,IAAI,CAAE,aAAc,CACpBC,MAAM,CAAE,CACN,CACEC,IAAI,CAAE,OAAO,CACbJ,IAAI,EAAAL,SAAA,CACFK,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEK,GAAG,CAAC,SAACC,KAAK,QAAM,CACpBC,CAAC,CAAED,KAAK,CAACE,UAAU,CACnBC,CAAC,CAAE,CAACH,KAAK,CAACI,IAAI,CAAEJ,KAAK,CAACK,IAAI,CAAEL,KAAK,CAACM,GAAG,CAAEN,KAAK,CAACO,KAAK,CACpD,CAAC,EAAC,CAAC,UAAAlB,SAAA,UAAAA,SAAA,CAAI,EACX,CAAC,CACD,CACFmB,OAAO,CAAE,CACPC,KAAK,CAAE,CACLC,MAAM,CAAE,GAAG,CACXC,KAAK,CAAE,GAAG,CACVC,OAAO,CAAE,CACPC,IAAI,CAAE,KACR,CAAC,CACDC,UAAU,CAAE,aACd,CAAC,CACDC,IAAI,CAAE,CAAEF,IAAI,CAAE,KAAM,CAAC,CACrBG,MAAM,CAAE,CACNC,KAAK,CAAE,QAAQ,CACfN,KAAK,CAAE,CACT,CAAC,CACDO,KAAK,CAAE,CACLL,IAAI,CAAE,KACR,CAAC,CACDM,KAAK,CAAE,CACLC,UAAU,CAAE,CAAEP,IAAI,CAAE,KAAM,CAAC,CAC3BQ,MAAM,CAAE,CAAER,IAAI,CAAE,KAAM,CAAC,CACvBS,SAAS,CAAE,CAAET,IAAI,CAAE,KAAM,CAAC,CAC1BjB,IAAI,CAAE,UAAU,CAChB2B,UAAU,EAAAjC,UAAA,CACRI,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEK,GAAG,CAAC,SAACC,KAAK,QACd,IAAI,CAAAwB,IAAI,CAACC,MAAM,CAACzB,KAAK,CAACE,UAAU,CAAC,CAAG,IAAI,CAAC,CAACwB,WAAW,CAAC,CAAC,EACzD,CAAC,UAAApC,UAAA,UAAAA,UAAA,CAAI,EACT,CAAC,CACD;AACA;AACA;AACA;AACA;AACAqC,OAAO,CAAE,CACPxB,CAAC,CAAE,CACDyB,SAAS,CAAE,SAAAA,UAACC,KAAK,aAAAC,MAAA,CAAUD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,GAC7C,CACF,CACF,CAAE,CACH,CACF,CACE,CAAC,CAEV,CAEA,cAAe,CAAA5C,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}