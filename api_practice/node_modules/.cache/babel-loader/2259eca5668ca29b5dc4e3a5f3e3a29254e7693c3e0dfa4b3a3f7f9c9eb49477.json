{"ast":null,"code":"var _jsxFileName = \"/Users/mojin/Documents/React_Project/api_practice/src/hooks/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    const regex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n  const handlePw = e => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleWrap\",\n      children: [\"\\uC774\\uBA54\\uC77C\\uACFC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"\\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          placeholder: \"test@gmail.com\",\n          value: email,\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !emailValid && email.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC62C\\uBC14\\uB978 \\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"26px\"\n        },\n        className: \"inputTitle\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          placeholder: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1\",\n          value: pw,\n          onChange: handlePw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !pwValid && pw.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lKvbOOWMl9vN9hbfzN4DD9o3/cA=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","email","setEmail","pw","setPw","emailValid","setEmailValid","pwValid","setPwValid","handleEmail","e","target","value","regex","test","handlePw","length","marginTop"],"sources":["/Users/mojin/Documents/React_Project/api_practice/src/hooks/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  const [emailValid, setEmailValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n    const regex =\n      /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handlePw = (e) => {\n    setPw(e.target.value);\n    const regex =\n      /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"titleWrap\">\n        이메일과 비밀번호를\n        <br />\n        입력해주세요\n      </div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">이메일 주소</div>\n        <div className=\"inputWrap\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"test@gmail.com\"\n            value={email}\n            onChange={handleEmail}\n          />\n        </div>\n        <div className=\"errorMessageWrap\">\n          {!emailValid && email.length > 0 && (\n            <div>올바른 이메일을 입력해주세요.</div>\n          )}\n        </div>\n\n        <div style={{ marginTop: \"26px\" }} className=\"inputTitle\">\n          비밀번호\n        </div>\n        <div className=\"inputWrap\">\n          <input\n            type=\"password\"\n            className=\"input\"\n            placeholder=\"영문, 숫자, 특수문자 포함 8자 이상\"\n            value={pw}\n            onChange={handlePw}\n          />\n        </div>\n        <div className=\"errorMessageWrap\">\n          {!pwValid && pw.length > 0 && (\n            <div>영문, 숫자, 특수문자 포함 8자 이상 입력해주세요.</div>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <button disabled={true} className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}