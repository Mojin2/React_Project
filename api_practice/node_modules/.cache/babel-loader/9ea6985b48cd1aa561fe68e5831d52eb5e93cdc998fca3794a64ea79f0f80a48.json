{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Project\\\\api_practice\\\\src\\\\api\\\\weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrap = styled.div`\n    width : 100vw;\n    height : 100vh;\n    border: 1px red solid;\n\n    .appContentWrap {\n        left : 50%;\n        top : 50%;\n        transform : translate(-50%,-50%);\n        position : absolute;\n        border : 1px blue solid;\n        padding : 20px;\n    }\n`;\n_c = AppWrap;\nconst ResultWrap = styled.div`\n    margin-top : 60px;\n    padding : 10px;\n    border : 1px black solid;\n    border-radius : 8px;\n`;\n_c2 = ResultWrap;\nfunction Weather(props) {\n  _s();\n  const API_KEY = \"0341698f7006d30bfc270c72aca51ef4\";\n  const {\n    location,\n    setLocation\n  } = useState(\"\");\n  const {\n    result,\n    setResult\n  } = useState({});\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n  const searchWeather = async event => {\n    if (event.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: 'get',\n          url: url\n        });\n        console.log(data);\n        setResult(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: location,\n        onChange: event => setLocation(event.target.value),\n        type: \"text\",\n        onKeyDown: searchWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this),\n      /*#__PURE__*/\n      // Object.keys(result).length !==0 && (\n      _jsxDEV(ResultWrap, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city\",\n          children: result.data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [Math.round((result.data.main.temp - 273.15) * 10) / 10, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sky\",\n          children: result.data.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n      // )\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"sZ45P5QaTb4ookwTfWFwyQNmE7U=\");\n_c3 = Weather;\nexport default Weather;\n\n// api key : 0341698f7006d30bfc270c72aca51ef4\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppWrap\");\n$RefreshReg$(_c2, \"ResultWrap\");\n$RefreshReg$(_c3, \"Weather\");","map":{"version":3,"names":["React","useState","styled","axios","AppWrap","div","ResultWrap","Weather","props","API_KEY","location","setLocation","result","setResult","url","searchWeather","event","key","data","method","console","log","err","alert","target","value","name","Math","round","main","temp","weather"],"sources":["C:/React_Project/api_practice/src/api/weather.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios'\r\n\r\nconst AppWrap = styled.div`\r\n    width : 100vw;\r\n    height : 100vh;\r\n    border: 1px red solid;\r\n\r\n    .appContentWrap {\r\n        left : 50%;\r\n        top : 50%;\r\n        transform : translate(-50%,-50%);\r\n        position : absolute;\r\n        border : 1px blue solid;\r\n        padding : 20px;\r\n    }\r\n`;\r\n\r\nconst ResultWrap = styled.div`\r\n    margin-top : 60px;\r\n    padding : 10px;\r\n    border : 1px black solid;\r\n    border-radius : 8px;\r\n`;\r\n\r\nfunction Weather(props){\r\n    const API_KEY =\"0341698f7006d30bfc270c72aca51ef4\";\r\n    const {location , setLocation} = useState(\"\");\r\n    const {result, setResult} = useState({});\r\n    const url=`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\r\n\r\n\r\n    const searchWeather = async(event) => {\r\n        if(event.key === \"Enter\") {\r\n            try{\r\n                const data = await axios({\r\n                    method:'get',\r\n                    url: url,\r\n                })\r\n                console.log(data);\r\n                setResult(data);\r\n\r\n            }\r\n            catch(err){\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppWrap>\r\n            <div className=\"appContentWrap\">\r\n                <input\r\n                    placeholder=\"도시를 입력하세요\"\r\n                    value={location}\r\n                    onChange={(event)=>setLocation(event.target.value)}\r\n                    type=\"text\"\r\n                    onKeyDown={searchWeather}\r\n                />\r\n            {\r\n                // Object.keys(result).length !==0 && (\r\n                    <ResultWrap>\r\n                        <div className=\"city\">{result.data.name}</div>\r\n                        <div className=\"temperature\">\r\n                            {Math.round(((result.data.main.temp - 273.15)*10))/10} °C\r\n                        </div>\r\n                        <div className=\"sky\">{result.data.weather[0].main}</div>\r\n                    </ResultWrap>\r\n                // )\r\n            }\r\n            </div>\r\n        </AppWrap>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n\r\n\r\n// api key : 0341698f7006d30bfc270c72aca51ef4\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAbID,OAAO;AAeb,MAAME,UAAU,GAAGJ,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAAC,MALIC,UAAU;AAOhB,SAASC,OAAO,CAACC,KAAK,EAAC;EAAA;EACnB,MAAMC,OAAO,GAAE,kCAAkC;EACjD,MAAM;IAACC,QAAQ;IAAGC;EAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM;IAACW,MAAM;IAAEC;EAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMa,GAAG,GAAE,qDAAoDJ,QAAS,UAASD,OAAQ,EAAC;EAG1F,MAAMM,aAAa,GAAG,MAAMC,KAAK,IAAK;IAClC,IAAGA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACtB,IAAG;QACC,MAAMC,IAAI,GAAG,MAAMf,KAAK,CAAC;UACrBgB,MAAM,EAAC,KAAK;UACZL,GAAG,EAAEA;QACT,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBL,SAAS,CAACK,IAAI,CAAC;MAEnB,CAAC,CACD,OAAMI,GAAG,EAAC;QACNC,KAAK,CAACD,GAAG,CAAC;MACd;IACJ;EACJ,CAAC;EAED,oBACI,QAAC,OAAO;IAAA,uBACJ;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QACI,WAAW,EAAC,mDAAW;QACvB,KAAK,EAAEZ,QAAS;QAChB,QAAQ,EAAGM,KAAK,IAAGL,WAAW,CAACK,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAE;QACnD,IAAI,EAAC,MAAM;QACX,SAAS,EAAEV;MAAc;QAAA;QAAA;QAAA;MAAA,QAC3B;MAAA;MAEF;MACI,QAAC,UAAU;QAAA,wBACP;UAAK,SAAS,EAAC,MAAM;UAAA,UAAEH,MAAM,CAACM,IAAI,CAACQ;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eAC9C;UAAK,SAAS,EAAC,aAAa;UAAA,WACvBC,IAAI,CAACC,KAAK,CAAE,CAAChB,MAAM,CAACM,IAAI,CAACW,IAAI,CAACC,IAAI,GAAG,MAAM,IAAE,EAAE,CAAE,GAAC,EAAE,EAAC,QAC1D;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAK,SAAS,EAAC,KAAK;UAAA,UAAElB,MAAM,CAACM,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACF;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;MAEhE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAEE;IAAA;IAAA;IAAA;EAAA,QACA;AAElB;AAAC,GAhDQtB,OAAO;AAAA,MAAPA,OAAO;AAkDhB,eAAeA,OAAO;;AAGtB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}