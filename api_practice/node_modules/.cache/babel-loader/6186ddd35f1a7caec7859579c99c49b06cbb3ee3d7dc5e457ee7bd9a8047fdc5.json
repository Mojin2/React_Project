{"ast":null,"code":"var _jsxFileName = \"/Users/mojin/Documents/React_Project/api_practice/src/api/weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  border: 1px red solid;\n\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    border: 1px blue solid;\n    padding: 20px;\n  }\n`;\n_c = AppWrap;\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  padding: 10px;\n  border: 1px black solid;\n  border-radius: 8px;\n`;\n_c2 = ResultWrap;\nfunction Weather() {\n  _s();\n  const API_KEY = \"0341698f7006d30bfc270c72aca51ef4\";\n  const [location, setLocation] = useState(\"\");\n  const [result, setResult] = useState({});\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n  const searchWeather = async event => {\n    if (event.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: \"get\",\n          url: url\n        });\n        console.log(data);\n        setResult(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n  /** 비동기 방식을 위하여 async/await를 사용*/\n\n  return /*#__PURE__*/_jsxDEV(AppWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: location,\n        onChange: event => setLocation(event.target.value),\n        type: \"text\",\n        onKeyDown: searchWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), Object.keys(result).length !== 0 && /*#__PURE__*/_jsxDEV(ResultWrap, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city\",\n          children: result.data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [Math.round((result.data.main.temp - 273.15) * 10) / 10, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sky\",\n          children: result.data.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"yeaP3NI/Cx7uoyLDb3V7dZWqRHI=\");\n_c3 = Weather;\nexport default Weather;\n\n// api key : 0341698f7006d30bfc270c72aca51ef4\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppWrap\");\n$RefreshReg$(_c2, \"ResultWrap\");\n$RefreshReg$(_c3, \"Weather\");","map":{"version":3,"names":["React","useState","styled","axios","AppWrap","div","ResultWrap","Weather","API_KEY","location","setLocation","result","setResult","url","searchWeather","event","key","data","method","console","log","err","alert","target","value","Object","keys","length","name","Math","round","main","temp","weather"],"sources":["/Users/mojin/Documents/React_Project/api_practice/src/api/weather.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  border: 1px red solid;\n\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    border: 1px blue solid;\n    padding: 20px;\n  }\n`;\n\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  padding: 10px;\n  border: 1px black solid;\n  border-radius: 8px;\n`;\n\nfunction Weather() {\n  const API_KEY = \"0341698f7006d30bfc270c72aca51ef4\";\n  const [location, setLocation] = useState(\"\");\n  const [result, setResult] = useState({});\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n\n  const searchWeather = async (event) => {\n    if (event.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: \"get\",\n          url: url,\n        });\n        console.log(data);\n        setResult(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n  /** 비동기 방식을 위하여 async/await를 사용*/\n\n  return (\n    <AppWrap>\n      <div className=\"appContentWrap\">\n        <input\n          placeholder=\"도시를 입력하세요\"\n          value={location}\n          onChange={(event) => setLocation(event.target.value)}\n          type=\"text\"\n          onKeyDown={searchWeather}\n        />\n        {Object.keys(result).length !== 0 && (\n          <ResultWrap>\n            <div className=\"city\">{result.data.name}</div>\n            <div className=\"temperature\">\n              {Math.round((result.data.main.temp - 273.15) * 10) / 10} °C\n            </div>\n            <div className=\"sky\">{result.data.weather[0].main}</div>\n          </ResultWrap>\n        )}\n      </div>\n    </AppWrap>\n  );\n}\n\nexport default Weather;\n\n// api key : 0341698f7006d30bfc270c72aca51ef4\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAbID,OAAO;AAeb,MAAME,UAAU,GAAGJ,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAAC,MALIC,UAAU;AAOhB,SAASC,OAAO,GAAG;EAAA;EACjB,MAAMC,OAAO,GAAG,kCAAkC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMY,GAAG,GAAI,qDAAoDJ,QAAS,UAASD,OAAQ,EAAC;EAE5F,MAAMM,aAAa,GAAG,MAAOC,KAAK,IAAK;IACrC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzB,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,KAAK,CAAC;UACvBe,MAAM,EAAE,KAAK;UACbL,GAAG,EAAEA;QACP,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBL,SAAS,CAACK,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,KAAK,CAACD,GAAG,CAAC;MACZ;IACF;EACF,CAAC;EACD;;EAEA,oBACE,QAAC,OAAO;IAAA,uBACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QACE,WAAW,EAAC,mDAAW;QACvB,KAAK,EAAEZ,QAAS;QAChB,QAAQ,EAAGM,KAAK,IAAKL,WAAW,CAACK,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAE;QACrD,IAAI,EAAC,MAAM;QACX,SAAS,EAAEV;MAAc;QAAA;QAAA;QAAA;MAAA,QACzB,EACDW,MAAM,CAACC,IAAI,CAACf,MAAM,CAAC,CAACgB,MAAM,KAAK,CAAC,iBAC/B,QAAC,UAAU;QAAA,wBACT;UAAK,SAAS,EAAC,MAAM;UAAA,UAAEhB,MAAM,CAACM,IAAI,CAACW;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eAC9C;UAAK,SAAS,EAAC,aAAa;UAAA,WACzBC,IAAI,CAACC,KAAK,CAAC,CAACnB,MAAM,CAACM,IAAI,CAACc,IAAI,CAACC,IAAI,GAAG,MAAM,IAAI,EAAE,CAAC,GAAG,EAAE,EAAC,QAC1D;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAK,SAAS,EAAC,KAAK;UAAA,UAAErB,MAAM,CAACM,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACF;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3D;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,GA5CQxB,OAAO;AAAA,MAAPA,OAAO;AA8ChB,eAAeA,OAAO;;AAEtB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}